# Generated by Django 4.2.16 on 2025-02-10 14:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('imageSmall', models.ImageField(null=True, upload_to='images/')),
                ('verified', models.BooleanField(default=False)),
                ('keywords', models.JSONField(blank=True, default=list, help_text='A list of up to 3 keywords for the dataset.', validators=[django.core.validators.MaxLengthValidator(3)])),
                ('imageHeight', models.PositiveIntegerField(blank=True, null=True)),
                ('imageWidth', models.PositiveIntegerField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=10)),
                ('datatype', models.CharField(choices=[('classification', 'Classification'), ('area', 'Area')], default='image', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(default=0)),
                ('layer_type', models.CharField(choices=[('dense', 'Dense'), ('conv2d', 'Conv2D')], default='dense', max_length=100)),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user')),
                ('name', models.CharField(blank=True, max_length=30, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Conv2DLayer',
            fields=[
                ('layer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.layer')),
                ('filters', models.PositiveIntegerField(default=1)),
                ('kernel_size', models.PositiveIntegerField(default=3)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.layer',),
        ),
        migrations.CreateModel(
            name='DenseLayer',
            fields=[
                ('layer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.layer')),
                ('nodes_count', models.PositiveIntegerField(default=1)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.layer',),
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('imageSmall', models.ImageField(null=True, upload_to='images/')),
                ('verified', models.BooleanField(default=False)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=10)),
                ('downloaders', models.ManyToManyField(blank=True, related_name='downloaded_models', to='api.profile')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='api.profile')),
                ('trained_on', models.ManyToManyField(blank=True, related_name='trained_with', to='api.dataset')),
            ],
        ),
        migrations.AddField(
            model_name='layer',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layers', to='api.model'),
        ),
        migrations.AddField(
            model_name='layer',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('color', models.CharField(default='#ffffff', max_length=7)),
                ('keybind', models.CharField(blank=True, max_length=20)),
                ('index', models.PositiveIntegerField(default=0)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='api.dataset')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='api.profile')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file', models.FileField(null=True, upload_to='files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'webp', 'avif', 'txt', 'doc', 'docx'])])),
                ('imageHeight', models.PositiveIntegerField(blank=True, null=True)),
                ('imageWidth', models.PositiveIntegerField(blank=True, null=True)),
                ('index', models.PositiveIntegerField(default=0)),
                ('dataset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api.dataset')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='labels', to='api.label')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='api.profile')),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.AddField(
            model_name='dataset',
            name='downloaders',
            field=models.ManyToManyField(blank=True, related_name='downloaded_datasets', to='api.profile'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='api.profile'),
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_points', models.JSONField(default=list)),
                ('element', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='api.element')),
                ('label', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='api.label')),
            ],
        ),
    ]
